{"name": "Проверка ответа при создании заказа запросом с невалидными ингредиентами аутентифицированным пользователем", "status": "failed", "statusDetails": {"message": "AssertionError: assert (400 == 500)\n +  where 400 = <Response [400]>.status_code", "trace": "self = <tests.test_create_order.TestCreateOrder object at 0x000002A8FA776580>\ncreate_new_user_and_delete = ({'email': 'bgonzalez@hotmail.com', 'name': 'Степан', 'password': '&*S5yMGYXj'}, {'accessToken': 'Bearer eyJhbGciOiJIU...6b25d64e640bd531fec3325331fac3dca9291', 'success': True, 'user': {'email': 'bgonzalez@hotmail.com', 'name': 'Степан'}})\n\n    @allure.title('Проверка ответа при создании заказа запросом с невалидными ингредиентами аутентифицированным пользователем')\n    @allure.description\n    def test_create_order_invalid_ingredients_authenticated_user_expected_error(self, create_new_user_and_delete):\n        headers = {'Authorization': create_new_user_and_delete[1]['accessToken']}\n        payload = {'ingredients': [IngredientData.invalid_hash_ingredient]}\n        response = requests.post(Urls.order_create, data=payload, headers=headers)\n>       assert response.status_code == 500 and response.json() == {\"success\": False,\n                                                                   \"message\": \"One or more ids provided are incorrect\"}\nE       assert (400 == 500)\nE        +  where 400 = <Response [400]>.status_code\n\ntests\\test_create_order.py:54: AssertionError"}, "start": 1747679230342, "stop": 1747679230636, "uuid": "0e6095ca-5ec9-4c60-8188-9d47334ec96d", "historyId": "c78dc2f65c70f2d33e631820a2d7f09a", "testCaseId": "c78dc2f65c70f2d33e631820a2d7f09a", "fullName": "tests.test_create_order.TestCreateOrder#test_create_order_invalid_ingredients_authenticated_user_expected_error", "labels": [{"name": "parentSuite", "value": "tests"}, {"name": "suite", "value": "test_create_order"}, {"name": "subSuite", "value": "TestCreateOrder"}, {"name": "host", "value": "cat"}, {"name": "thread", "value": "12084-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "tests.test_create_order"}]}